;*******************************************************************************************
;  FILE:   Psionics Ex Machina. CBAC Bridge ini                                
;  
;	File created	20/08/20    21:00
;	LAST UPDATED    21/01/21    02:00
;
;	EDITS HERE DO NOT EFFECT THE RAPID PSIONICS VALID ABILITIES, PLEASE SEE THE XCOMPSIONICSEXMACHINA_ABILITIES.ini
;   THIS FILE EFFECTS WHAT COLOUR THE ABILITIES TURN IF THE UNIT IS UNDER THE MODIFYING EFFECT
;
;*******************************************************************************************
[WOTC_CostBasedAbilityColors.UITacticalHUD_Ability_WOTC_CostBasedAbilityColors]
;*******************************************************************************************
; ICON SYMBOL COLORS
;AbilityCostColor_FreeAction =      "5ac864"	;Green
;AbilityTypeColor_Psionic =			"b6b3e3"    ;purple

; ABILITY COST COLOR OVERRIDE LIST
; ********************************
; Use ability cost color overrides to correct any ability colors that dont get handled properly 
;   - this can include mod-added abilities that only return actions via PostAbilityCostPaid (without changing the actual action point costs), etc.
;	- ((THATS US HERE IN THIS MOD WITH THE CLARITY OF MIND / RAPID PSIONICS PERK))
;
; The overrides are entered using the AbilityCostColorOverride struct and the members and their usage are detailed below:
;		var string	AbilityName				(the name of the ability being modified) - REQUIRED field
;		var string	ModifyingAbilityName	(the name of the ability that the unit must have to validate the modify) - OPTIONAL, can be left empty
;		var string	ModifyingEffectName		(the name of the effect that the unit must have to validate the modify) - OPTIONAL, can be left empty
;		var string	OverrideColor			(if a color string is entered, the ability being modified will use that color instead) - OPTIONAL, can be left empty
;		var bool	bIsFreeAction			(if true, the ability being modified will be considered a free action) - OPTIONAL, can be left empty
;		var bool	bIsTurnEnding			(if true, the ability being modified will be considered a turn ending action) - OPTIONAL, can be left empty
;		var bool	bNotTurnEnding			(if true, the ability being modified will be considered a non-turn ending action) - OPTIONAL, can be left empty
;
; Use the following entry format - only include the OPTIONAL members that you need:
;   +AbilityCostColorOverrides=(AbilityName=Name, ModifyingAbilityName=Name, ModifyingEffectName=Name, OverrideColor=Color_String, bIsFreeAction=Bool, bIsTurnEnding=Bool, bNotTurnEnding=Bool)
; ********************************

; THE PSI TEST ABILITIES -- BY DEFAULT USING THESE ABILITIES MAKES ALL PSI-ABILITIES HAVE A FREE ACTION COST FOR THEIR NEXT ACTIVATION IN THIS TURN
; THE ACTUAL 'ACTIVATION' ABILITIES -- HERE FOR EASE BUT DECIDED TO KEEP THEM IN 'FREE GREEN' OUTLINE
;+AbilityCostColorOverrides=(AbilityName=RapidPsionics_Standard, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=RapidPsionics_Average, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=RapidPsionics_Gifted, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=RapidPsionics_Genius, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=RapidPsionics_Savant, OverrideColor="b6b3e3"); bIsFreeAction=true)

;*******************************************************************************************
; THE GEMS LIST == THE PSI-ABILITY LIST
;	!!	EDITS HERE DO NOT EFFECT THE RAPID PSIONICS VALID ABILITIES, PLEASE SEE THE XCOMPSIONICSEXMACHINA_ABILITIES.ini	!!
;	!!   THIS FILE EFFECTS WHAT COLOUR THE ABILITIES TURN IF THE UNIT IS UNDER THE MODIFYING EFFECT	!!
;*******************************************************************************************

+AbilityCostColorOverrides=(AbilityName=Fuse,				    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)

+AbilityCostColorOverrides=(AbilityName=Insanity,               ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=Schism,                 ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=SoulSteal,              ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=Stasis,                 ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=StasisShield,           ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=Inspire,                ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=SoulFire,               ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=Domination,             ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=NullLance,              ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=VoidRift,               ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)

+AbilityCostColorOverrides=(AbilityName=BS_MCDetonate,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=BS_StrainMind,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)

+AbilityCostColorOverrides=(AbilityName=IRI_PsiReanimation,     ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=IRI_Soulmerge,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=IRI_Soulstorm,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=IRI_Nullward,           ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=IRI_PhaseWalk,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)

+AbilityCostColorOverrides=(AbilityName=MZBetrayal,             ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZDisable,              ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZKineticPush,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZMalaise,              ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZMindControl,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZMindSoothe,           ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZPanacea,              ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZPsiPanic,             ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZKineticLance,         ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZPsiBlind,             ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZAmorFati,             ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZAuroraWave,           ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZPsiHeal,              ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZRayOfLife,            ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZRestoreLife,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZPillar,               ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZFireball,             ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZMachinaPuppeteer,     ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZRayzeelSong,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZFuse,                ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZBlink,               ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZTeleport,            ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZVoidShock,           ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZProtection,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=GrimySoulTap,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=GrimyAnomaly,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZClearTranquil,       ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZMagnusExorcismus,    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZManuForti,           ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZMindMerge,           ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZTransmitPrana,       ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZTurnUndead,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZBloodPillar,         ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZBloodTeleport,       ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZControlUndead,       ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZCurseLure,           ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZDeadExplosion,       ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZHaltUndead,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZZombify,             ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)

+AbilityCostColorOverrides=(AbilityName=MZAllCreation,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZNaturesEmbrace,       ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZNaturesWrath,        ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZShiningFlare,        ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZRockfall,            ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZVenomSquall,         ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZAngrySky,            ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZAvalanche,           ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZCounterFlood,        ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MZMistStorm,           ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)

+AbilityCostColorOverrides=(AbilityName=BattleSpace,            ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=ABB_Blend,              ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=Taunt,                 ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)

+AbilityCostColorOverrides=(AbilityName=F_Blend,                ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=F_MindBlast,            ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=F_OverExertion,         ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=F_Rally,               ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=F_Stimulate,           ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=F_Adrenaline,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=F_ammoConservation,    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=F_Dedication,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=F_Intimidate,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)

;+AbilityCostColorOverrides=(AbilityName=Mindspin,              ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=PsiBombStage1,         ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=PsiBombStage2,         ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=AnimaInversion,        ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=AnimaConsume,          ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=MindControl,           ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=DimensionalRift,       ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=AvatarDamagedTeleport, ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
;+AbilityCostColorOverrides=(AbilityName=AvatarRegeneration,    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)

;Support for rusty's 'psionics' abilities :)
+AbilityCostColorOverrides=(AbilityName=RustyPsiHeal,           ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=RustyPanacea,           ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=RustySixthSense,        ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=TemplarMeditation,      ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)

;templar support
+AbilityCostColorOverrides=(AbilityName=Volt,					ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=Pillar,					ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=StunStrike,				ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=TemplarInvert,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=TemplarExchange,		ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=Ghost,					ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=VoidConduit,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=IonicStorm,	    		ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)

;templar ABB:TLE
+AbilityCostColorOverrides=(AbilityName=VoltM2,					ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=VoltM3,					ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)

;templar MPP
+AbilityCostColorOverrides=(AbilityName=MZForkedLightning,		ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZVoidLightning,		ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZStormForce,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZStormSurge,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZStormShock,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZStaticShock,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=MZThunderstorm,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)

;support for necromancer class skills, provided by SolarNougat
+AbilityCostColorOverrides=(AbilityName=NecroSpiritArmorAbility,ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=NecroRaiseDead,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=NecroMassRaiseDead,		ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=NecroFireballAbility,	ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=NecroPoison,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=NecroCombustion,		ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=NecroLightning,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=NecroDrainLife,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=NecroEldritchStorm,		ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=NecroSoulSpear,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=NecroCorpseExplosion,	ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=NecroRestoration,		ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=NecroConceal,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=NecroVigor,			    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=NecroInsectSwarm,		ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=Necro_Shaman_GuardianSpirit,    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)

;support for warden class skills, provided by SolarNougat
+AbilityCostColorOverrides=(AbilityName=WardenPush,			    ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=WardenUnbalanceShot,	ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=WardenWinding,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=WardenHalfSword,		ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
+AbilityCostColorOverrides=(AbilityName=WardensAdvance,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)

;support stormriders
;TODO
;+AbilityCostColorOverrides=(AbilityName=,			ModifyingEffectName=RapidPsionics_FreeAction, OverrideColor="b6b3e3"); bIsFreeAction=true)
