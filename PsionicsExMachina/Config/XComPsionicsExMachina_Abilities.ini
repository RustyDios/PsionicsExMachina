;   ======================================================================================================================================================
;  FILE:   Psionics Ex Machina. ABILITY ini                                
;  
;	File created	12/10/20    13:00
;	LAST UPDATED    21/01/21	02;00
;
;   ADDS psi PCS && GEM Attachments for psi amp weapons
;
;   ======================================================================================================================================================

[PsionicsExMachina.X2Item_PsionicsExMachina]

;struct ConvertAbilityToPexM 
;{
;	var string Type;        ;PCS or GEM     PCS are mainly for Passives, GEMs are for Actives
;	var name AbilityName;   ;the ability name
;	var int SellValue;      ;how much you can sell the item for at the black market     ;sell value suggestions		;Low = 10	;Med = 25	;High = 50
;	var string ImagePath;   ;image path in a upk, does not need the img:/// prefix, by default images are grouped by source but you could easily change this to be by type or whatever
;	var bool bCanBuild;     ;toggle if the item can be built by the projects ... used to create a PCS/GEM that you might want to add only to the loot tables for example
;};

;you can add/remove abilities to this list by commenting them in/out with a ; 
;abilities in this list that you do not actually have a perk pack for will get converted to 'crystalised meld' (so they dont break the loot tables by 'not existing' as items)

;   ======================================================================================================================================================
;			!! WARNING !!   ensure that ALL PCS and GEMs in the LOOT tables are ON these lists, else the entire loot system breaks    !! WARNING !!
;   ======================================================================================================================================================

;   for help I have added !! LOOT TABLES !! to the end of the default ability setups if it is on the default loot tables
;   all default abilities have been tested to work, some other abilities may not work correctly
;   abilities not working correctly: might have incorrect damage previews, texts or animations ... but the system is fairly robust and this shouldn't be an issue in most cases
;   feel free to add abilities from other perk packs that you think would 'make sense' as psi abilities for your mod setup
;   -- -- default options included are stuff I (rustydios) thought would make cool psi abilities but MrCloista didn't :)
;
;	!!	GEM abilities added here should also get an entry in the XComWOTC_CostBasedAbilityColors.ini !!

;   ======================================================================================================================================================
;	//	//	//	PCSes	//	//	//  +AbilitiesToConvert = (Type = "PCS", AbilityName = Name,    SellValue = 10, ImagePath = "string", bCanBuild = true )
;   ======================================================================================================================================================

;Base game 	
	+AbilitiesToConvert = (Type = "PCS", AbilityName = Fortress,			    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "PCS", AbilityName = Solace,			        SellValue = 25, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "PCS", AbilityName = Sustain,			        SellValue = 10, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "PCS", AbilityName = TargetDefinition,	    SellValue = 75, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!

;Bstar Perk Pack				https://steamcommunity.com/sharedfiles/filedetails/?id=2115077818
	+AbilitiesToConvert = (Type = "PCS", AbilityName = BS_Unstable,		        SellValue = 25, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "PCS", AbilityName = BS_PsionicAtrophy,	    SellValue = 25, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "PCS", AbilityName = BS_BattleMeditation,	    SellValue = 25, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "PCS", AbilityName = BS_MindOverMatter,	    SellValue = 25, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "PCS", AbilityName = BS_MindThief,		    SellValue = 25, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!

;Mitzruti Perk Pack				https://steamcommunity.com/sharedfiles/filedetails/?id=1561030099
	+AbilitiesToConvert = (Type = "PCS",  AbilityName = GrimyReinvigorate,	    SellValue = 25, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "PCS",  AbilityName = MZRegenerate,		    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "PCS",  AbilityName = GrimyWillToSurvive,	    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!
    ;+AbilitiesToConvert = (Type = "PCS", AbilityName = MZTransposition,	    SellValue = 25, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )
    ;+AbilitiesToConvert = (Type = "PCS", AbilityName = MZCongregation,		    SellValue = 25, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )
    ;+AbilitiesToConvert = (Type = "PCS", AbilityName = MZRayzeelSong,		    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )
    ;+AbilitiesToConvert = (Type = "PCS", AbilityName = MZHealersMind,		    SellValue = 25, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )
    ;+AbilitiesToConvert = (Type = "PCS", AbilityName = MZWildTalent,		    SellValue = 25, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )
    ;+AbilitiesToConvert = (Type = "PCS", AbilityName = MZTerribleThought,	    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )

;ABB Perk Pack					https://steamcommunity.com/sharedfiles/filedetails/?id=1993868715
	+AbilitiesToConvert = (Type = "PCS",  AbilityName = ABB_TrialByFire,	    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "PCS",  AbilityName = ABB_Parkour,		    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!
	;+AbilitiesToConvert = (Type = "PCS", AbilityName = BattleSpace,		    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "PCS", AbilityName = HiddenReserves,		    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )

;Favids Extended Perk Pack		https://steamcommunity.com/sharedfiles/filedetails/?id=1546482849
	+AbilitiesToConvert = (Type = "PCS",  AbilityName = F_Concentration,	    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "PCS",  AbilityName = F_Renewal,			    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "PCS",  AbilityName = F_Steadfast,		    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "PCS",  AbilityName = F_Adrenaline,		    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )   ; !! LOOT TABLES !!
	;+AbilitiesToConvert = (Type = "PCS", AbilityName = F_Avenger,			    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "PCS", AbilityName = F_FireFirst,		    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "PCS", AbilityName = F_Momentum,			    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "PCS", AbilityName = F_PierceTheVeil,	    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "PCS", AbilityName = F_Preservation,		    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "PCS", AbilityName = F_QuickFeet,		    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "PCS", AbilityName = F_Survivor,			    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "PCS", AbilityName = F_Triage,			    SellValue = 50, ImagePath = "UILibrary_StrategyImages.X2InventoryIcons.Inv_CombatSim_Psi", bCanBuild = true )

;   ======================================================================================================================================================
;	//	//	//	GEMs	//	//	//  +AbilitiesToConvert = (Type = "GEM", AbilityName = Name,    SellValue = 10, ImagePath = "string", bCanBuild = true )
;   ======================================================================================================================================================

;Base game
	+AbilitiesToConvert = (Type = "GEM", AbilityName = Insanity,			    SellValue = 10, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Purple", bCanBuild = true ) ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = Schism,				    SellValue = 10, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Purple", bCanBuild = true ) ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = SoulSteal,			    SellValue = 10, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Purple", bCanBuild = true ) ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = Stasis,				    SellValue = 10, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Purple", bCanBuild = true ) ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = StasisShield,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Purple", bCanBuild = true ) ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = Inspire,				    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Purple", bCanBuild = true ) ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = SoulFire,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Purple", bCanBuild = true ) ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = Domination,			    SellValue = 75, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Purple", bCanBuild = true ) ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = NullLance,			    SellValue = 50, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Purple", bCanBuild = true ) ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = VoidRift,			    SellValue = 75, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Purple", bCanBuild = true ) ; !! LOOT TABLES !!

;Bstar Perk Pack                https://steamcommunity.com/sharedfiles/filedetails/?id=2115077818
	+AbilitiesToConvert = (Type = "GEM", AbilityName = BS_MCDetonate,		    SellValue = 50, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Green", bCanBuild = true )  ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = BS_StrainMind,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Green", bCanBuild = true )  ; !! LOOT TABLES !!
	
;Iridars More Psi Abilities     https://steamcommunity.com/sharedfiles/filedetails/?id=1662114279
	+AbilitiesToConvert = (Type = "GEM", AbilityName = IRI_PsiReanimation,	    SellValue = 10, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Red", bCanBuild = true )    ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = IRI_Soulmerge,		    SellValue = 10, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Red", bCanBuild = true )    ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = IRI_Soulstorm,		    SellValue = 50, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Red", bCanBuild = true )    ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = IRI_NullWard,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Red", bCanBuild = true )    ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = IRI_PhaseWalk,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Red", bCanBuild = true )    ; !! LOOT TABLES !!

;Mitzruti Perk Pack             https://steamcommunity.com/sharedfiles/filedetails/?id=1561030099
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZBetrayal,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZDisable,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZKineticPush,		    SellValue = 10, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZMalaise,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZMindControl,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZMindSoothe,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZPanacea,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZPsiPanic,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZKineticLance,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZPsiBlind,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZAmorFati,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZAuroraWave,		    SellValue = 50, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZPsiHeal,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZRayOfLife,			    SellValue = 50, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZRestoreLife,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZPillar,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZFireball,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZMachinaPuppeteer,	    SellValue = 50, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZRayzeelSong,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZFuse,				    SellValue = 10, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZBlink,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZTeleport,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZVoidShock,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZProtection,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = GrimySoulTap,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = GrimyAnomaly,		    SellValue = 50, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZClearTranquil,	    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZMagnusExorcismus,	    SellValue = 50, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZManuForti,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZMindMerge,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZTransmitPrana,	    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZTurnUndead,		    SellValue = 50, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZBloodPillar,		    SellValue = 10, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZBloodTeleport,	    SellValue = 10, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZControlUndead,	    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZCurseLure,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZDeadExplosion,	    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZHaltUndead,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZZombify,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )

;Mitzruti Perk Pack DLC 		https://steamcommunity.com/sharedfiles/filedetails/?id=2066389408
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZAllCreation,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = MZNaturesEmbrace,	    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )   ; !! LOOT TABLES !!
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZNaturesWrath,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZShiningFlare,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZRockfall,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZVenomSquall,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZAngrySky,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZAvalanche,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZCounterFlood,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MZMistStorm,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Blue", bCanBuild = true )

;ABB PP                         https://steamcommunity.com/sharedfiles/filedetails/?id=1993868715
	+AbilitiesToConvert = (Type = "GEM", AbilityName = BattleSpace,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Yellow", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = ABB_Blend,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Yellow", bCanBuild = true )   ; !! LOOT TABLES !!
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = Taunt,				    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Yellow", bCanBuild = true )

;Favids Extended Perk Pack      https://steamcommunity.com/sharedfiles/filedetails/?id=1546482849
	+AbilitiesToConvert = (Type = "GEM", AbilityName = F_Blend,				    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Amber", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = F_MindBlast,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Amber", bCanBuild = true )   ; !! LOOT TABLES !!
	+AbilitiesToConvert = (Type = "GEM", AbilityName = F_OverExertion,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Amber", bCanBuild = true )   ; !! LOOT TABLES !!
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = F_Rally,			    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Amber", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = F_Stimulate,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Amber", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = F_Adrenaline,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Amber", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = F_AmmoConservation,	    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Amber", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = F_Dedication,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Amber", bCanBuild = true )
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = F_Intimidate,		    SellValue = 25, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Amber", bCanBuild = true )

;Base game enemy abilities ?     some of these work, some don't ... user caution advised ...
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = Mindspin,				SellValue = 50, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Green", bCanBuild = true ) ;works but lacking flair
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = PsiBombStage1,		    SellValue = 50, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Green", bCanBuild = true ) ;first half is okay, no 2nd detonation
    ;+AbilitiesToConvert = (Type = "GEM", AbilityName = PsiBombStage2,		    SellValue = 50, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Green", bCanBuild = true ) ;really broken
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = AnimaInversion,		    SellValue = 50, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Green", bCanBuild = true ) ;no anims
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = AnimaConsume,			SellValue = 50, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Green", bCanBuild = true ) ;no anims
	
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = MindControl,			SellValue = 42, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Green", bCanBuild = true ) ;commanders avatar mind control
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = DimensionalRift,		SellValue = 69, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Green", bCanBuild = true ) ;commanders avatar rift
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = AvatarDamagedTeleport,  SellValue = 50, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Green", bCanBuild = true ) ;cool but massively OP and unctrollable
	;+AbilitiesToConvert = (Type = "GEM", AbilityName = AvatarRegeneration,	    SellValue = 50, ImagePath = "UILibrary_PexM.Inventory.Gemstone_Green", bCanBuild = true ) ;cool but massively OP

;   ======================================================================================================================================================
;	//	//	//	RAPID PSIONICS CLARITY OF MIND	//	//	//  
;   ======================================================================================================================================================

;	you could list any extra abilities here you would like the 'Rapid Psionics - Clarity of Mind' training perk to affect
;	!!	any abilities listed here should also get an entry in the XComWOTC_CostBasedAbilityColors.ini !!
;
;	You can use the console command 'RustyFix_ToolBox_PexM_DumpRapidClarityList' to output the completed list to the log, if you want to check it from the game
;	by default this list will -already dynamically include- any active GEM ability set above

+RAPID_PSIONICS_VALID_ABILITIES = Fuse

;rusty's 'psionics' support
+RAPID_PSIONICS_VALID_ABILITIES = RustyPsiHeal
+RAPID_PSIONICS_VALID_ABILITIES = RustyPanacea
+RAPID_PSIONICS_VALID_ABILITIES = RustySixthSense
+RAPID_PSIONICS_VALID_ABILITIES = TemplarMeditation

;templar abilities support 
+RAPID_PSIONICS_VALID_ABILITIES = Volt
+RAPID_PSIONICS_VALID_ABILITIES = Pillar
+RAPID_PSIONICS_VALID_ABILITIES = StunStrike
+RAPID_PSIONICS_VALID_ABILITIES = TemplarInvert
+RAPID_PSIONICS_VALID_ABILITIES = TemplarExchange
+RAPID_PSIONICS_VALID_ABILITIES = Ghost
+RAPID_PSIONICS_VALID_ABILITIES = VoidConduit
+RAPID_PSIONICS_VALID_ABILITIES = IonicStorm

;templar abilities support for ABB:TLE
+RAPID_PSIONICS_VALID_ABILITIES = VoltM2
+RAPID_PSIONICS_VALID_ABILITIES = VoltM3

;templar abilities support for Mitzruti Perk Pack
+RAPID_PSIONICS_VALID_ABILITIES = MZForkedLightning
+RAPID_PSIONICS_VALID_ABILITIES = MZVoidLightning
+RAPID_PSIONICS_VALID_ABILITIES = MZStormForce
+RAPID_PSIONICS_VALID_ABILITIES = MZStormSurge
+RAPID_PSIONICS_VALID_ABILITIES = MZStormShock
+RAPID_PSIONICS_VALID_ABILITIES = MZStaticShock
+RAPID_PSIONICS_VALID_ABILITIES = MZThunderstorm

;necromancer abilities support, provided by SolarNougat
+RAPID_PSIONICS_VALID_ABILITIES = NecroSpiritArmorAbility
+RAPID_PSIONICS_VALID_ABILITIES = NecroRaiseDead
+RAPID_PSIONICS_VALID_ABILITIES = NecroMassRaiseDead
+RAPID_PSIONICS_VALID_ABILITIES = NecroFireballAbility
+RAPID_PSIONICS_VALID_ABILITIES = NecroPoison
+RAPID_PSIONICS_VALID_ABILITIES = NecroCombustion
+RAPID_PSIONICS_VALID_ABILITIES = NecroLightning
+RAPID_PSIONICS_VALID_ABILITIES = NecroDrainLife
+RAPID_PSIONICS_VALID_ABILITIES = NecroEldritchStorm
+RAPID_PSIONICS_VALID_ABILITIES = NecroSoulSpear
+RAPID_PSIONICS_VALID_ABILITIES = NecroCorpseExplosion
+RAPID_PSIONICS_VALID_ABILITIES = NecroRestoration
+RAPID_PSIONICS_VALID_ABILITIES = NecroConceal
+RAPID_PSIONICS_VALID_ABILITIES = Necro_Shaman_GuardianSpirit
+RAPID_PSIONICS_VALID_ABILITIES = NecroVigor
+RAPID_PSIONICS_VALID_ABILITIES = NecroInsectSwarm

;warden abilities support, provided by SolarNougat
+RAPID_PSIONICS_VALID_ABILITIES=WardenPush
+RAPID_PSIONICS_VALID_ABILITIES=WardenUnbalanceShot
+RAPID_PSIONICS_VALID_ABILITIES=WardenWinding
+RAPID_PSIONICS_VALID_ABILITIES=WardenHalfSword
+RAPID_PSIONICS_VALID_ABILITIES=WardensAdvance

;stormriders ability support 
;TODO

;; ===============================================================================

[PsionicsExMachina.X2Ability_PsionicsExMachina]
;show the psionic grade passive icon in the passives area
bShowPassiveIcons = true

;psi offense boost values for the five combat intelligence training abilities
;was decided in beta testing that this option might make crazy powerful psionics so keep it reasonable
iPSIBOOST_STANDARD = 10 ;10
iPSIBOOST_AVERAGE = 10 ;10
iPSIBOOST_GIFTED = 15 ;15
iPSIBOOST_GENIUS = 15 ;15
iPSIBOOST_SAVANT = 20 ;20

;this is the setup for the training ability , Clarity of Mind
iRapid_Cost_AP = 2 ;2
bRapid_Cost_Free = true ;true       ;if it is free but has action points those points will be evaluted for activation but not consumed
bRapid_Cost_EndTurn = false ;false  ;should the ability end the turn

bRapid_Resets_PsiAbility_Cooldowns = true ;true		;should the ability reset cooldowns of all psi-abilites
bRapid_GivesNext_PsiAbility_FreeAction = true ;true	;make the next psi-ability activated this turn be completely free, refunds Action Point, cooldown, charges and focus

;'psi-abilities' are defined as any ability that has an active GEM counterpart and any additional abilities in the rapid psionics array above

;control ability costs of each 'tier' of Rapid Psionics ... a value of 0 negates that cost, for number of charges, if set it will cost 1 charge to use
iRapid_Cost_Cooldown_STANDARD = 12  ;12
iRapid_Cost_xCharges_STANDARD = 0   ;0

iRapid_Cost_Cooldown_AVERAGE = 12   ;12
iRapid_Cost_xCharges_AVERAGE = 0    ;0

iRapid_Cost_Cooldown_GIFTED = 9     ;9
iRapid_Cost_xCharges_GIFTED = 0     ;0

iRapid_Cost_Cooldown_GENIUS = 6     ;6
iRapid_Cost_xCharges_GENIUS = 0     ;0

iRapid_Cost_Cooldown_SAVANT = 6     ;6
iRapid_Cost_xCharges_SAVANT = 0     ;0

;Clarity of Mind is a HUGELY powerful skill, this check makes a 20% chance that it will leave a unit in a Shattered state on use, or be uncontrolled berserk mode!!
;based on the SpectreM1's Horror ... 
[PsionicsExMachina.X2EventListener_ClarityWillEvent]

;enable clarity will rolls, and choose if the Commanders Avatar should be immune to will loss/roll from clarity
bEnableClarityWillRolls = true
bSkipForCommandersAvatar = true

ClarityWillRollData =(	WillLossChance=20,\\
					  	FlatWillLossChance=true,\\
					  	WillLossStat=WillEventRollStat_MaxWill,\\
					  	WillLossStatMultiplier=1.0, CanZeroOutWill=true,\\
					  	PanicChance=2.0,\\
						PanicWeights[0]=(PanicAbilityName="Berserk", Weight=1),\\
					  	PanicWeights[1]=(PanicAbilityName="Shattered", Weight=3))

;This structure provides a simple uniform mechanism for doing rolls to lose will
;struct native WillEventRollData
;{
;	var EMentalState MinimumTiredState;		// this will data will not be applied to units that are less fatigued than this state
;	var float WillEventActivationChance;	// if all other conditions are met, this is the chance that this will event should actually modify will/roll on panic
;	var name WillEventActivationType;		// if non-none, will events of this type are restricted to only happening once per unit per mission
;
;	var float WillLossChance;				// chance to lose will.  
;	var bool FlatWillLossChance;			// if true, will do a straight roll against WillLossChance, if false rolls against WillLossChance - eStat_Will
;
;	var WillEventRoll_StatType WillLossStat;// Calculated will loss is the value of the chosen WillLossStat *  WillLossStatMultiplier
;	var float WillLossStatMultiplier;		// Final will loss is max(<calculated will loss>, MinimumWillLoss)
;	var int MinimumWillLoss;
;
;	var float MaxWillPercentageLostPerMission;	// if > 0, will will only be lost up to this percentage of the unit's max will
;	var bool CanZeroOutWill;					// if false, will always leave at least 1 will remaining
;
;	// When a unit loses will, a roll will be made against PanicChance. If the roll passes, one of the abilities in PanicWeights will be selected.
;	var float PanicChance;						// 0.0-1.0f, will be further reduced by a unit's will
;	var array<WillEventRollData_PanicWeight> PanicWeights; Panicked Ability Name, weight
;};
;   ======================================================================================================================================================
;   ======================================================================================================================================================
